sudo git clone https://github.com/jaiminpatel7024/ecom-config-server.git
sudo git clone https://github.com/jaiminpatel7024/ecom-eureka-server.git
sudo git clone https://github.com/jaiminpatel7024/ecom-gateway-server.git
sudo git clone https://github.com/jaiminpatel7024/ecom-customer-service.git
sudo git clone https://github.com/jaiminpatel7024/ecom-product-catalog-service.git
sudo git clone https://github.com/jaiminpatel7024/ecom-inventory-service.git
sudo git clone https://github.com/jaiminpatel7024/ecom-order-processing-service.git
sudo git clone https://github.com/jaiminpatel7024/ecom-payment-service.git
sudo git clone https://github.com/jaiminpatel7024/ecom-api-compositor-service.git

sudo chown -R labuser:labuser /home/labuser/ecom

export VM_IP=1.1.1.1
---
docker run -d --name redis-container -p $VM_IP:6379:6379 redis:latest
---
docker run -d \
  --name postgres-container \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=postgres \
  -p $VM_IP:5432:5432 \
  postgres:latest
---
docker run -d \
  --name pgadmin-container \
  -p $VM_IP:8081:80 \
  -e PGADMIN_DEFAULT_EMAIL=admin@admin.com \
  -e PGADMIN_DEFAULT_PASSWORD=admin \
  dpage/pgadmin4

Create DBs post logging into pgadmin console : ecom-cs,ecom-is,ecom-pcs,ecom-ops,ecom-ps
---
docker run -d --name zookeeper -p $VM_IP:2181:2181 zookeeper:latest
docker run -d --name kafka -p $VM_IP:9092:9092 \
-e KAFKA_ZOOKEEPER_CONNECT=$VM_IP:2181 \
-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://$VM_IP:9092 \
-e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
confluentinc/cp-kafka:latest

# TO-DO add the topics we need 
docker exec -it kafka kafka-topics --list --bootstrap-server $VM_IP:9092
docker exec -it kafka kafka-console-consumer --topic auth-events --bootstrap-server $VM_IP:9092 --from-beginning
docker exec -it kafka kafka-console-consumer --topic product-events --bootstrap-server $VM_IP:9092 --from-beginning
docker exec -it kafka kafka-console-consumer --topic order-events --bootstrap-server $VM_IP:9092 --from-beginning


Backup
# docker network create kafka-network
# docker run -d --name zookeeper --network kafka-network -p $VM_IP:2181:2181 zookeeper:latest
# docker run -d --name kafka --network kafka-network -p $VM_IP:9092:9092   -e KAFKA_ZOOKEEPER_CONNECT=$VM_IP:2181   -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://$VM_IP:9092   -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1   confluentinc/cp-kafka:latest
# TO-DO add the topics we need 

docker exec -it kafka kafka-topics --list --bootstrap-server $VM_IP:9092
docker exec -it kafka kafka-console-consumer --topic auth-events --bootstrap-server $VM_IP:9092 --from-beginning
docker exec -it kafka kafka-console-consumer --topic product-events --bootstrap-server $VM_IP:9092 --from-beginning
docker exec -it kafka kafka-console-consumer --topic order-events --bootstrap-server $VM_IP:9092 --from-beginning

docker exec -it kafka kafka-topics --create --topic test-topic --bootstrap-server $VM_IP:9092 --partitions 1 --replication-factor 1

docker exec -it kafka kafka-console-producer --topic test-topic --bootstrap-server $VM_IP:9092
docker exec -it kafka kafka-console-consumer --topic test-topic --bootstrap-server $VM_IP:9092 --from-beginning

---
docker run -d --name zipkin -p 9411:9411 openzipkin/zipkin:latest
---
docker run -d --name loki -p 3100:3100 grafana/loki:latest
---
docker run -d --name=grafana \
  -p 3000:3000 \
  -e GF_SECURITY_ADMIN_PASSWORD=admin \
  grafana/grafana
---
prometheus.yml ===

global:
  scrape_interval: 5s  # Scrape every 5 seconds

scrape_configs:
  - job_name: 'api-gateway'
    metrics_path: '/actuator/prometheus'
    static_configs:
      - targets: ['172.31.10.3:8072']  # API Gateway Port
===
docker run -d --name=prometheus \
  -p 9090:9090 \
  -v $(pwd)/prometheus.yml:/etc/prometheus/prometheus.yml \
  prom/prometheus
---
